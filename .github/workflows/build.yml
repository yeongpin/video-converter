name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        shell: bash

      # Windows特定的权限修复
      - name: Fix Windows permissions
        if: matrix.os == 'windows-latest'
        run: |
          npm cache clean --force
          Remove-Item -Recurse -Force node_modules -ErrorAction SilentlyContinue
        shell: pwsh
        
      - name: Install dependencies
        run: |
          npm install --no-optional
          npm install --save-dev electron-builder@latest
        env:
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
        
      - name: Build application
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
          
      - name: Rename artifacts
        shell: bash
        run: |
          mkdir -p ./artifacts
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv dist/*-setup.exe "./artifacts/video_converter_${{ env.VERSION }}_win.exe" || true
            mv dist/*-portable.exe "./artifacts/video_converter_${{ env.VERSION }}_win_portable.exe" || true
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            mv dist/*.dmg "./artifacts/video_converter_${{ env.VERSION }}_mac.dmg" || true
          else
            mv dist/*.AppImage "./artifacts/video_converter_${{ env.VERSION }}_linux.AppImage" || true
          fi
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: artifacts/*
          retention-days: 1
          
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Video Converter ${{ github.ref_name }}
          files: artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 